// Generated by CoffeeScript 1.8.0
var ReactCompiler, babel, omit, react;

react = require('react-tools/main');

babel = require('babel-core');

omit = require('lodash.omit');

module.exports = ReactCompiler = (function() {
  ReactCompiler.prototype.brunchPlugin = true;

  ReactCompiler.prototype.type = 'javascript';

  ReactCompiler.prototype.extension = 'jsx';

  ReactCompiler.prototype.pattern = /\.jsx/;

  function ReactCompiler(config) {
    var key, options, _i, _len, _ref, _ref1, _ref2;
    this.config = config;
    options = ((_ref = this.config) != null ? (_ref1 = _ref.plugins) != null ? _ref1.react : void 0 : void 0) || {};
    _ref2 = Object.keys(options);
    for (_i = 0, _len = _ref2.length; _i < _len; _i++) {
      key = _ref2[_i];
      if (key !== 'babel' && key !== 'transformOptions') {
        console.warn("Warning: react-brunch requires to set option keys in `transformOptions`. See: http://goo.gl/Whn9z6");
        break;
      }
    }
    this.babel = options.babel === true;
    this.options = options.transformOptions || options || {};
    if (this.options.babel) {
      this.options = omit(this.options, 'babel');
    }
  }

  ReactCompiler.prototype.compile = function(params, callback) {
    var err, output, source;
    source = params.data;
    try {
      if (this.babel) {
        output = babel.transform(source, this.options);
      } else {
        output = react.transformWithDetails(source, this.options);
      }
    } catch (_error) {
      err = _error;
      console.log("ERROR", err);
      console.dir(output);
      return callback(err.toString());
    }
    return callback(null, {
      data: output.code
    });
  };

  return ReactCompiler;

})();
